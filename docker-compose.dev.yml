services:
  postgres:
    image: postgres:16-alpine
    container_name: turbo-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: sabir
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: booklab_db
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - turbo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sabir -d booklab_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  redis:
    image: redis:7-alpine
    container_name: turbo-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass redispw --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - turbo-network
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: turbo-server-dev
    restart: unless-stopped
    user: "0:0"
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
      - HOST=0.0.0.0
      - SCHEME=http
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001,http://localhost:4000
      - SESSION_SECRET=1f3fd74888c842f58d507322785a4861
      - JWT_SECRET=fJq86HD1s7FlTEMd3O85AuIWL1fdrhziD6q5xvEd7fs=
      - JWT_REFRESH_SECRET=DCqJ9pZa75Tz+DT3AJV+Ffcl/5ZvJ/59Ns2Lanjj3cQ=
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=sabir
      - DB_PASSWORD=pw
      - DB_NAME=booklab_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispw
      - REDIS_DB=0
    volumes:
      - ./apps/server:/usr/src/app/apps/server:cached
      - ./packages:/usr/src/app/packages:cached
      - ./turbo.json:/usr/src/app/turbo.json:cached
      - ./package.json:/usr/src/app/package.json:cached
      - server_node_modules:/usr/src/app/node_modules
    networks:
      - turbo-network
    depends_on:
      - postgres
      - redis
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: turbo-web-dev
    restart: unless-stopped
    user: "0:0"
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./apps/web:/usr/src/app/apps/web:cached
      - ./packages:/usr/src/app/packages:cached
      - ./turbo.json:/usr/src/app/turbo.json:cached
      - ./package.json:/usr/src/app/package.json:cached
      - web_node_modules:/usr/src/app/node_modules
      - /usr/src/app/apps/web/.next
    networks:
      - turbo-network
    depends_on:
      - server
  docs:
    build:
      context: .
      dockerfile: apps/docs/Dockerfile
    container_name: turbo-docs-dev
    restart: unless-stopped
    user: "0:0"
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./apps/docs:/usr/src/app/apps/docs:cached
      - ./packages:/usr/src/app/packages:cached
      - ./turbo.json:/usr/src/app/turbo.json:cached
      - ./package.json:/usr/src/app/package.json:cached
      - docs_node_modules:/usr/src/app/node_modules
      - /usr/src/app/apps/docs/.next
    networks:
      - turbo-network
volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  server_node_modules:
    driver: local
  web_node_modules:
    driver: local
  docs_node_modules:
    driver: local
networks:
  turbo-network:
    driver: bridge
