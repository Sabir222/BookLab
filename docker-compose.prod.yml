version: '3.8'
services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: turbo-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-sabir}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pw}
      POSTGRES_DB: ${DB_NAME:-booklab_db}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - turbo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sabir} -d ${DB_NAME:-booklab_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: turbo-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispw} --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - turbo-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  # Server API
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
      target: production
    container_name: turbo-server-prod
    restart: unless-stopped
    ports:
      - "${PORT:-4000}:4000"
    environment:
      - PORT=4000
      - NODE_ENV=production
      - HOST=0.0.0.0
      - SCHEME=${SCHEME:-https}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - SESSION_SECRET=${SESSION_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-15m}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - ACCESS_TOKEN_COOKIE_NAME=${ACCESS_TOKEN_COOKIE_NAME:-access_token}
      - REFRESH_TOKEN_COOKIE_NAME=${REFRESH_TOKEN_COOKIE_NAME:-refresh_token}
      - REFRESH_TOKEN_COOKIE_MAX_AGE=${REFRESH_TOKEN_COOKIE_MAX_AGE:-604800000}
      - ACCESS_TOKEN_COOKIE_MAX_AGE=${ACCESS_TOKEN_COOKIE_MAX_AGE:-900000}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-sabir}
      - DB_PASSWORD=${DB_PASSWORD:-pw}
      - DB_NAME=${DB_NAME:-booklab_db}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispw}
      - REDIS_DB=${REDIS_DB:-0}
    networks:
      - turbo-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
  # Web App
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: production
    container_name: turbo-web-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - turbo-network
    depends_on:
      - server
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
  # Docs App
  docs:
    build:
      context: .
      dockerfile: apps/docs/Dockerfile
      target: production
    container_name: turbo-docs-prod
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - turbo-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
networks:
  turbo-network:
    driver: bridge
